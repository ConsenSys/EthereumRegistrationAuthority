package tech.pegasys.era;

import org.bouncycastle.util.encoders.Hex;
import org.web3j.crypto.Hash;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import tech.pegasys.era.internal.AutoGeneratedDomainInfo;
import java.math.BigInteger;
import java.nio.charset.StandardCharsets;

/**
 * DomainInfo Java Wrapper Class.
 */
public class DomainInfo {

    private AutoGeneratedDomainInfo domainInfoAutoGenWrapperReal;

    public DomainInfo(RemoteCall<AutoGeneratedDomainInfo> domainInfoAutoGenWrapper) throws Exception {
        domainInfoAutoGenWrapperReal = domainInfoAutoGenWrapper.send();
    }

    public DomainInfo(AutoGeneratedDomainInfo domainInfoAutoGenWrapperReal) {
        this.domainInfoAutoGenWrapperReal = domainInfoAutoGenWrapperReal;
    }

    /**
     * Get the contract address of the Era.
     * @return - The contract address.
     */
    public String getContractAddress() {
        return domainInfoAutoGenWrapperReal.getContractAddress();
    }

    //Key is the String of the domain name.
    public TransactionReceipt setValue(String key, byte[] value) throws Exception {
        BigInteger keyHash = getDomainHash(key);
        return domainInfoAutoGenWrapperReal.setValue(keyHash, value).send();
    }

    public TransactionReceipt deleteValue(String key) throws Exception {
        BigInteger keyHash = getDomainHash(key);
        return domainInfoAutoGenWrapperReal.deleteValue(keyHash).send();
    }

    public byte[] getValue(String key) throws Exception {
        BigInteger keyHash = getDomainHash(key);
        return domainInfoAutoGenWrapperReal.getValue(keyHash).send();
    }

    public BigInteger getVersion() throws Exception {
        return domainInfoAutoGenWrapperReal.getVersion().send();
    }

    /**
     * Get the BigInteger representation of given domain name.
     * @param domainName - String of domain name.
     * @return Keccak256 Hash of the given domain name in BigInteger representation.
     */
    private BigInteger getDomainHash(String domainName) {
        String hexString = Hash.sha3(Hex.toHexString(domainName.getBytes(StandardCharsets.UTF_8))).substring(2);
        return new BigInteger(hexString, 16);
    }
}